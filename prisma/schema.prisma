generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "nestjs-zod-prisma"
  output                = "./zod/"
  relationModel         = false
  generateDto           = false
  modelCase             = "PascalCase"
  modelSuffix           = "Model"
  useDecimalJs          = true
  imports               = ""
  prismaJsonNullability = true
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at")

  // Attributes
  name       String  @unique @db.VarChar(255)
  price      Int
  image      String? @db.VarChar
  discount   Int?
  status     Int? //  ??
  state      Int // like Draft/Publish?
  details    String? @db.VarChar(255) // like description?
  position   String? @db.VarChar(255) // ??
  nonProcess String? @map("non_process") @db.VarChar(255) // ??
  calories   String? @db.VarChar(255)

  // Relations
  categoryId String? @map("category_id") @db.VarChar(255)
  storeId    String? @map("store_id") @db.VarChar(255)
  commandId  String? @map("command_id") @db.VarChar(255)

  // Autogenerated
  OrderItem OrderItem[]

  @@map("product")
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at")

  // Attributes
  name     String  @unique @db.VarChar(255)
  image    String? @db.VarChar
  type     String? @db.VarChar(255)
  state    Int // like Draft/Publish?
  position Int? // ??

  // Relations
  parentId Int? @map("parent_id") // ??
  storeId  Int? @map("store_id") // ??

  @@map("category")
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at")

  // Attributes
  totalAmount   Int?    @map("total_amount")
  status        Int? // Again
  type          String? @db.VarChar(255) // Again
  discountValue Int?    @map("discount_value")
  gifted        String? @db.VarChar(255)
  tip           Int?
  address       String? @db.VarChar(255)
  pickUpInfo    String? @map("pick_up_info") @db.VarChar(255)
  reference     String? @db.VarChar(255)
  tipValue      Int?    @map("tip_value")
  deliveryValue Int?    @map("delivery_value")
  taxValue      Int?    @map("tax_value")

  // Relations
  customerId Int?        @map("customer_id")
  orderItem  OrderItem[]

  // New Relations
  creatorId Int? @map("creator_id")
  clientId  Int? @map("client_id")
  storeId   Int? @map("store_id")
  tableId   Int? @map("table_id")
  billingId Int? @map("billing_id")
  parentId  Int? @map("parent_id")

  @@map("order")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at")

  // New
  quantity     Int?
  amount       Int?
  gifted       Int?
  details      Int?
  comments     String? @db.VarChar(255)
  cancelReason Int?    @map("cancel_reason")
  productPrice Float?  @map("product_price")
  invDiscount  Int?    @map("inv_discount")
  productName  String? @map("product_name") @db.VarChar(255)
  notification Int?
  toPrint      Int?    @map("to_print")
  dateState    Int?    @map("date_state")
  status       Int? // Again Status

  // Relations
  productId  Int?     @map("product_id")
  product    Product? @relation(fields: [productId], references: [id])
  orderId    Int?     @map("order_id")
  order      Order?   @relation(fields: [orderId], references: [id])
  employeeId Int?     @map("employee_id") // Solve, add employee

  @@map("order_item")
}

model Store {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at")

  // Attributes
  storeName        String  @map("store_name") @db.VarChar(255)
  storeType        String  @map("store_type") @db.VarChar(255)
  location         String  @db.VarChar(255)
  profilePicture   String? @map("profile_picture") @db.VarChar(255)
  coverImage       String? @map("cover_image") @db.VarChar(255)
  legalName        String? @map("legal_name") @db.VarChar(255)
  testMode         Int?    @map("test_mode")
  phone            Int?
  cellphone        Int?
  code             Int?
  address          String? @db.VarChar(255)
  description      String? @db.VarChar(255)
  nit              Int?
  rating           Int?
  extraInfoAddress String? @map("extra_info_address") @db.VarChar(255)
  state            Int // like Draft/Publish?

  // Relations
  storeSettingsId Int  @map("store_settings_id")
  categoryId      Int  @map("category_id")
  countryId       Int? @map("country_id")
  stateId         Int? @map("state_id")
  cityId          Int? @map("city_id")
  ownerId         Int? @map("owner_id")

  @@map("store")
}

model UserAddress {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at")

  // Attributes
  address String? @db.VarChar(255)
  alias   String? @db.VarChar(255)
  details String? @db.VarChar(255)

  @@map("user_address")
}

// delete ?? handle user reset differently
// model PasswordResetRequest ?
model UserReset {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at")

  // Attributes
  newEmail   String? @map("new_email") @db.VarChar(255)
  type       String? @db.VarChar(255)
  token      String? @db.VarChar(255)
  expireTime String? @map("expire_time") @db.VarChar(255)

  // Relations
  userId Int @map("user_id")

  @@map("user_reset")
}

model User {
  // Metadata
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at")

  // Attributes
  nickName           String   @map("nick_name") @db.VarChar(255)
  email              String   @unique @db.VarChar(255)
  password           String   @db.VarChar(255)
  resetPasswordToken String?  @map("reset_password_token") @db.VarChar(255)
  firstName          String   @map("first_name") @db.VarChar(255)
  lastName           String   @map("last_name") @db.VarChar(255)
  gender             String   @db.VarChar(255)
  birthDate          DateTime @map("birth_date")
  phone              String   @db.VarChar(255) // @unique?
  phonePrefix        String   @map("phone_prefix") @db.VarChar(255)
  birthCountry       String   @map("birth_country") @db.VarChar(255)
  birthState         String   @map("birth_state") @db.VarChar(255)
  birthCity          String   @map("birth_city") @db.VarChar(255)
  birthPostalCode    Int?     @map("birth_postal_code")

  // Extras
  cellphone       Int?
  cellphonePrefix Int?    @map("cellphone_prefix")
  documentType    Int?    @map("document_type")
  documentId      Int?    @map("document_id")
  profile         Int?
  role            Role?
  status          Int?
  profilePic      String? @map("profile_pic") @db.VarChar(255)
  state           Int? // like Draft/Publish?

  // Relations
  countryId Int? @map("country_id")
  storeId   Int? @map("store_id")
  tableId   Int? @map("table_id")

  @@map("user")
}

enum Role {
  ADMIN
  USER
}
